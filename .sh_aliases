##################################
# Common Shell Alias Definitions #
##################################
#
# `~./sh_aliases` defines usefull aliases.

# Alias
# =====

# Colors
# ------
# Enable color support of `ls`.
if command -v dircolors > /dev/null
then
    if [ -f "${HOME}/.dircolors" ]
    then
        eval "$(dircolors -b ${HOME}/.dircolors)"
    else
        eval "$(dircolors -b)"
    fi
    alias ls='ls --color=auto'
fi

# Enable color support of `grep`.
# The `GREP_COLORS` variable specifies the colors and other attributes used to
# highlight various parts of the output. Its value is a colon-separated list of
# capabilities that defaults to
# `ms=01;31:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36` with the `rv` and `ne`
# boolean capabilities omitted  (i.e., false). See `man grep(1)` for supported
# capabilities.
#
# Set green color (`31`) for matching non-empty text in a selected line instead
# of red (`32`) and red instead of green for line numbers and byte offsets
# prefixing any content line. All other default values are kept.
export GREP_COLORS='ms=01;32:mc=01;32:ln=31:bn=31'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'
alias grep='grep --color=auto'

# Misc
# ----

alias ciao='exit'
alias lrt='ls -thlr'
alias q='emacs'
alias rmspace='sed "s/[[:blank:]]*$//"'
alias s='emacs'

# Use `neovim` instead of `vim`.
if command -v nvim > /dev/null
then
    alias neovim='nvim'
    alias vi='nvim'
    alias vim='nvim'
    alias vimdiff='nvim -d'
fi

# Conda
# -----

alias env-recreate='/usr/local/bin/conda-recreate'
alias env-activate='source activate $(basename $(pwd))'
alias env-deactivate='conda deactivate'

# Functions
# =========

# Add this for anaconda install.
if [ -d "${HOME}/.local/share/JetBrains/Toolbox/apps/PyCharm-C/" ]
then
    charm() {
        PYCHARM=$(
            find "${HOME}/.local/share/JetBrains/Toolbox/apps/PyCharm-C/" \
            -name pycharm.sh | sort | tail -n 1
        )
        ${PYCHARM} ${@}
    }
fi

# Remove files starting with `#`; print nothing if no file found.
function rmh() {
    for f in \#* .\#*
    do
        if [ -f "${f}" ]
        then
            rm "${f}"
        fi
    done
}

# Remove files ending with `~`; print nothing if no file found.
function rmtt() {
    for f in *~ .*~
    do
        if [ -f "${f}" ]
        then
            rm "${f}"
        fi
    done
}

# Print in html format the textual diff between two files.
# Arguments:
#     $1 and $2 are the text files (mandatory).
#     $3 are the output html filename (optional).
function vimdiff2html() {
    # You must use double quote otherwise it doesn't work as expected.
    vimdiff "${1}" "${2}" -c TOhtml -c "w! ${3}" -c "qa!"
}
